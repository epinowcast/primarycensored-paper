version: '3'

tasks:
  default:
    desc: Run the complete analysis pipeline
    deps: [render]
    cmds:
      - task: run

  render:
    desc: Render the targets Rmarkdown document
    sources:
      - _targets.Rmd
      - R/**/*.R
    generates:
      - _targets.md
    cmds:
      - echo "Rendering _targets.Rmd..."
      - Rscript -e "rmarkdown::render('_targets.Rmd')"

  run:
    desc: Run the targets pipeline
    sources:
      - _targets.R
      - R/**/*.R
      - _targets_r/**/*.R
    cmds:
      - echo "Running targets pipeline..."
      - Rscript -e "targets::tar_make()"

  visualize:
    desc: Create a visualization of the pipeline
    deps: [render]
    cmds:
      - echo "Creating pipeline visualization..."
      - Rscript -e "targets::tar_visnetwork()"

  progress:
    desc: Show pipeline progress
    cmds:
      - echo "Checking pipeline progress..."
      - Rscript -e "targets::tar_progress()"

  clean:
    desc: Clean targets cache (use with caution!)
    cmds:
      - echo "This will delete all computed results. Are you sure? [y/N]"
      - read -r ans && [ "$ans" = "y" ] && rm -rf _targets/

  help:
    desc: Show available commands
    cmds:
      - task --list

  install:
    desc: Install required R packages
    cmds:
      - Rscript -e "if (!requireNamespace('renv', quietly = TRUE)) install.packages('renv')"
      - Rscript -e "renv::restore()"

  profile:
    desc: Profile the targets pipeline with profvis to identify bottlenecks
    cmds:
      - echo "Profiling targets pipeline with profvis..."
      - Rscript -e "library(profvis); results <- profvis(targets::tar_make(callr_function = NULL, use_crew = FALSE, as_job = FALSE)); saveRDS(results, 'profile_results.rds'); print(results, aggregate = TRUE)"
      - echo "Profile results saved to profile_results.rds"

  profile-proffer:
    desc: Profile the targets pipeline with proffer
    cmds:
      - echo "Profiling targets pipeline with proffer..."
      - Rscript -e "if (!requireNamespace('proffer', quietly = TRUE)) install.packages('proffer'); proffer::pprof(targets::tar_make(callr_function = NULL, use_crew = FALSE, as_job = FALSE))"